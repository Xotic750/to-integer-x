{"version":3,"sources":["../src/to-integer-x.js"],"names":[],"mappings":"AAAA,OAAO,QAAP,IAAkB,YAAlB,QAAqC,aAArC;AACA,OAAO,WAAP,MAAwB,UAAxB;AACA,OAAO,cAAP,MAA2B,aAA3B;AACA,OAAO,QAAP,IAAkB,QAAlB,QAAiC,aAAjC;IAEO,G,GAAc,I,CAAd,G;IAAK,K,GAAS,I,CAAT,K;AAEZ;;;;;;;AAMA,OAAO,SAAS,aAAT,CAAuB,KAAvB,EAA8B;AACnC,MAAM,MAAM,GAAG,YAAY,CAAC,KAAD,CAA3B;;AAEA,MAAI,WAAW,CAAC,MAAD,CAAf,EAAyB;AACvB,WAAO,CAAP;AACD;;AAED,MAAI,MAAM,KAAK,CAAX,IAAgB,cAAc,CAAC,MAAD,CAAd,KAA2B,KAA/C,EAAsD;AACpD,WAAO,MAAP;AACD;;AAED,SAAO,QAAQ,CAAC,MAAD,CAAR,GAAmB,KAAK,CAAC,GAAG,CAAC,MAAD,CAAJ,CAA/B;AACD;AAED;;;;;;;AAMA,IAAM,aAAa,GAAG,SAAS,aAAT,CAAuB,KAAvB,EAA8B;AAClD,MAAM,MAAM,GAAG,QAAQ,CAAC,KAAD,CAAvB;;AAEA,MAAI,WAAW,CAAC,MAAD,CAAf,EAAyB;AACvB,WAAO,CAAP;AACD;;AAED,MAAI,MAAM,KAAK,CAAX,IAAgB,cAAc,CAAC,MAAD,CAAd,KAA2B,KAA/C,EAAsD;AACpD,WAAO,MAAP;AACD;;AAED,SAAO,QAAQ,CAAC,MAAD,CAAR,GAAmB,KAAK,CAAC,GAAG,CAAC,MAAD,CAAJ,CAA/B;AACD,CAZD;;AAcA,eAAe,aAAf","file":"to-integer-x.esm.js","sourcesContent":["import toNumber, {toNumber2016} from 'to-number-x';\nimport numberIsNaN from 'is-nan-x';\nimport numberIsFinite from 'is-finite-x';\nimport mathSign, {sign2016} from 'math-sign-x';\n\nconst {abs, floor} = Math;\n\n/**\n * Converts `value` to an integer. (ES2016).\n *\n * @param {*} value - The value to convert.\n * @returns {number} Returns the converted integer.\n */\nexport function toInteger2016(value) {\n  const number = toNumber2016(value);\n\n  if (numberIsNaN(number)) {\n    return 0;\n  }\n\n  if (number === 0 || numberIsFinite(number) === false) {\n    return number;\n  }\n\n  return sign2016(number) * floor(abs(number));\n}\n\n/**\n * Converts `value` to an integer. (ES2018).\n *\n * @param {*} value - The value to convert.\n * @returns {number} Returns the converted integer.\n */\nconst toInteger2018 = function toInteger2018(value) {\n  const number = toNumber(value);\n\n  if (numberIsNaN(number)) {\n    return 0;\n  }\n\n  if (number === 0 || numberIsFinite(number) === false) {\n    return number;\n  }\n\n  return mathSign(number) * floor(abs(number));\n};\n\nexport default toInteger2018;\n"]}